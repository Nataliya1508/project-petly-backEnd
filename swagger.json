{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Petly Project",
    "description": "Team project documentation",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://goit-project-petly-backend.onrender.com" }],
  "tags": [
     {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "News",
      "description": "News endpoint"
    },

     {
      "name": "Services-sidebar",
      "description": "Information about partners"
    },
    
     {
      "name": "Notices",
      "description": "Notices endpoints"
    },

     {
      "name": "Pets",
      "description": "Pets endpoints"
    }
     
  ],

  
  "paths": {
    "/api/users/register": {
      "post": {
        "tags": ["User"],
        "summary": "Create a new user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "This email is already in use",
            "content": {}
          },
           "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }   
    },

    "/api/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "Login user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User is logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Login error",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      } 
    },

    "/api/users/update": {
      "patch": {
        "tags": ["User"],
        "summary": "Update an existing user",
        "parameters": [ 
          {
             "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "User update failed",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          },
           "500": {
            "description": "Server error",
            "content": {}
          }
        } 
      } 
    },

    "/api/users/avatar": {
      "patch": {
        "tags": ["User"],
        "summary": "Update avatar",
        "parameters": [ 
           { 
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "avatar",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The avatar was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Avatar update failed",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          }
        } 
      }  
    },

    "/api/users/logout": {
      "get": {
        "tags": ["User"],
        "summary": "Log out user",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "The user is logged out",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token.",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      } 
    },

    "/api/news": {
      "get": {
        "tags": ["News"],
        "summary": "Get all news",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A list of news",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }  
    },

    "/api/services": {
      "get": {
        "tags": ["Services-sidebar"],
        "summary": "Get all partners",
        "parameters": [],
        "security": [{ "Bearer": [] }],
       "responses": {
          "200": {
            "description": "Ok, Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      } 
    },

    "api/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get information about the pet's user",
        "parameters": [
            {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Information about pets found",
             "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPetsResponse"
                }
              }
            }
           },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          }
        }
       }
      },
    
     "/api/notices/category/{categoryName}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Notices by category",
        "parameters": [
          {
            "in": "path",
            "name": "categoryName",
            "type": "string",
            "description": "Name of category"
          }
         ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation, notices found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesResponse"
                }
              }
            }
          },
           "404": {
            "description": "There is no such category.",
            "content": {}
          },
           "500": {
            "description": "Server error",
            "content": {}
          }
        }
       }
      },

     "/api/notices": {
      "get": {
        "tags": ["Notices"],
        "summary": "My notices",
        "parameters": [
         {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
         ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation, notices found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          },
          "404": {
            "description": "Notices not found",
            "content": {}
          },
           "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
        
      "post": {
        "tags": ["Notices"],
        "summary": "Create my notices",
        "parameters": [
         {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
         ],
        "security": [{ "Bearer": [] }],
         "requestBody": {
          "description": "New notice",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoticesRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The notice was successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesResponse"
                }
              }
            }
          },
        "400": {
            "description": "Error creating notice",
            "content": {}
          },
        "401": {
            "description": "Missing header with authorization token",
            "content": {}
          },
           "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
      },

      "/api/notices/favorites/{id}": {
       "patch": {
        "tags": ["Notices"],
        "summary": "Add notice to favorites",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Add to favorites"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          } 
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation, notice added to favorite",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Notice not found",
            "content": {}
          },
           "500": {
            "description": "Server error",
            "content": {}
          }
        }
       },

       "put": {
        "tags": ["Notices"],
        "summary": "Remove from favorites",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Remove from favorites"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],
       "responses": {
          "200": {
            "description": "Notice removed from favorites",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          },
          "404": {
            "description": "Nothing found",
            "content": {}
          },
           "500": {
            "description": "Server error",
            "content": {}
          }
        }
       }
      },

    "/api/notices/{id}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get one notice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Search by id"
          }
         ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation, notice found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Nothing found",
            "content": {}
          },
           "500": {
            "description": "Server error",
            "content": {}
          }
        }
       },

      "delete": {
        "tags": ["Notices"],
        "summary": "Delete my notice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Search by id"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
         ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation, This notice deleted",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token.",
            "content": {}
          },
          "404": {
            "description": "Notice not found",
            "content": {}
          },
           "500": {
            "description": "Server error",
            "content": {}
          }
        }
       }
       },

    "/api/notices/favorites/all": {
      "get": {
        "tags": ["Notices"],
        "summary": "My favorites notices",
        "parameters": [
          {
              "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],
       "responses": {
          "200": {
            "description": "Successful operation, notices found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          },
          "404": {
            "description": "Favorites not found",
            "content": {}
          },
           "500": {
            "description": "Server error",
            "content": {}
          }
        }
       }
      },

     "/api/pets": {
      "post": {
        "tags": ["Pets"],
        "summary": "Create a new pet",
        "parameters": [
        {
             "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "New pet",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserPetsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The pet was successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPetsResponse"
                }
              }
            }
          },
        "400": {
            "description": "Error creating pet",
            "content": {}
          },
        "401": {
            "description": "Missing header with authorization token",
            "content": {}
          },
           "500": {
            "description": "Server error",
            "content": {}
          }
        }
       }
      },

    "/api/pets/{id}": {
      "delete": {
        "tags": ["Pets"],
        "summary": "delete this pet",
        "parameters": [
          {
            "in": "path",
            "name": "petId",
            "required": true,
            "type": "string",
            "description": "Delete by id"
            },
            {
             "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],
       "responses": {
          "200": {
            "description": "The pet was deleted.",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          },
          "404": {
            "description": "There is no such pet",
            "content": {}
          },
           "500": {
            "description": "Server error",
            "content": {}
          }
        }
       }
      }
    },

"components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Natalia"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
          }
      },
      "RegistrationResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {

            "userId": {
              "type": "string",
              "description": "User's id",
              "example": "63d7b0dfh78956072a3ad82e88"
            },
             "name": {
              "type": "string",
              "description": "User's name",
              "example": "Natalia"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            }
            }
        }
       },

"LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {

          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
       "properties": {

              "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
             "token": {
              "type": "string",
              "description": "Token"
              }
          }
       },

          "UpdateRequest": {
        "type": "object",
        "properties": {

           "name": {
            "type": "string",
            "description": "User's name",
            "example": "Natalia"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
         "address": {
            "type": "string",
            "description": "User's adress",
            "example": "Kyiv, Konovaltsa street"
          },
           "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380990976783"
          },
          "birthday": {
              "type": "date",
              "description": "Date of Birth",
              "format": "binary",
              "example": "15.08.2000"
            }
          }
      },

      "UpdateResponse": {
        "type": "object",
          "properties": {

          "userId": {
              "type": "string",
              "description": "User's id",
              "example": "32143232436545474"
            },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
         "name": {
            "type": "string",
            "description": "User's name",
            "example": "Natalia"
          },
          "address": {
            "type": "string",
            "description": "User's adress",
            "example": "Kyiv, Konovaltsa street"
          },
           "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380990976783"
          },
          "birthday": {
              "type": "date",
              "description": "Date of Birth",
              "format": "binary",
              "example": "15.08.2000"
            }
      }
        },

         "AvatarRequest": {
        "type": "object",
        "properties": {

            "avatarURL": {
              "type": "string",
              "description": "Avatar",
              "format": "binary"
            }  
        }
      },

      "AvatarResponse": {
          "type": "object",
          "properties": {
          
            "avatarURL": {
              "type": "string",
              "description": "Avatar",
              "format": "binary",
              "example": "https://res.cloudinary.com/dr525ee18/image/upload/v1675106400/partners/frame_287_sukix5.png"
            }
      
          
          }
        },

      "NewsResponse": {
         "type": "array",
        "items": {
          "type": "object",
          "properties": {

            "id": {
              "type": "string",
              "description": "id",
              "example": "63d7b0396656072a3ad82e88"
            },
             "title": {
              "type": "string",
              "description": "User's name",
              "example": "Title"
            },
              "url": {
              "type": "string",
              "description": "Url",
              "example": "https://docs.google.com/spreadsheets/d/1A8ly_RzN0fQZGNPwayRwEHm4iOAumuQh/edit#gid=1786629929"
            },
             "description": {
              "type": "string",
              "description": "Aricle"
              },
              "date": {
              "type": "string",
              "description": "date",
              "example": "15-12-2022"
            }
          }
        }
      },

      "ServicesResponse": {
         "type": "array",
        "items": {
          "type": "object",
          "properties": {

            "id": {
              "type": "string",
              "description": "id",
              "example": "63d7b0396656072a3ad82e88"
            },
             "title": {
              "type": "string",
              "description": "User's name",
              "example": "Title"
            },
              "url": {
              "type": "string",
              "description": "Url",
              "example": "https://docs.google.com/spreadsheets/d/1A8ly_RzN0fQZGNPwayRwEHm4iOAumuQh/edit#gid=1786629929"
            },
             "addressUrl": {
              "type": "string",
              "description": "addressUrl",
              "example": "https://goo.gl/maps/iq8NXEUf31EAQCzc6"
            },
              "imageUrl": {
              "type": "string",
              "description": "imageUrl",
              "example": "https://res.cloudinary.com/dr525ee18/image/upload/v1675106400/partners/frame_287_sukix5.png"
            },
            "address": {
              "type": "string",
              "description": "address",
              "example": "Fedorivka, Kyiv Oblast, Ukraine, 07372"
            },
            "workDays": {
              "type": "Array",
              "description": " workDays"
            },
             "phone": {
            "type": "string",
            "description": "Phone",
            "example": "+380990976783"
          },
           "email": {
            "type": "string",
            "description": "Email",
            "format": "email"
          }
          }
        }
      },

      "UserPetsRequest": {
        "type": "object",
        "required": ["name", "birthdate", "breed"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Teo"
          },
          "birthdate": {
             "type": "string",
              "description": "Date of birth",
              "example": "25-02-2022"
          },
          "breed": {
            "type": "string",
              "description": "breed",
              "example": "Exot"
          },
            "photo": {
              "type": "string",
              "description": "Photo",
               "format": "binary"
              },
              "comments": {
              "type": "string",
              "description": "Comments"
              }
        }
      },

            "UserPetsResponse": {
         "type": "array",
        "items": {
          "type": "object",
          "properties": {

            "id": {
              "type": "string",
              "description": "id",
              "example": "63d7b0396656072a3ad82e88"
            },
             "name": {
              "type": "string",
              "description": "Name",
              "example": "Teo"
            },
             "birthdate": {
              "type": "string",
              "description": "Date of birth",
              "example": "25-02-2022"
            },
             "breed": {
              "type": "string",
              "description": "breed",
              "example": "Exot"
            },
            "photo": {
              "type": "string",
              "description": "Photo",
              "example": "https://res.cloudinary.com/dr525ee18/image/upload/v1675106400/partners/frame_287_sukix5.png"
            },
              "comments": {
              "type": "string",
              "description": "Comments"
            }
          }
        }
      },

       "NoticesRequest": {
        "type": "object",
        "required": ["name", "birthdate", "breed"],
        "properties": {

              "name": {
              "type": "string",
              "description": "Name",
              "example": "Teo"
            },
             "birthdate": {
              "type": "string",
              "description": "date",
              "example": "25-02-2022"
            },
             "breed": {
              "type": "string",
              "description": "breed",
              "example": "Exot"
            },
             "location": {
              "type": "string",
              "description": "Location",
              "example": "Fedorivka, Kyiv Oblast, Ukraine, 07372"
            },
             "comments": {
              "type": "string",
              "description": "Comments"
            },
             "price": {
              "type": "integer",
              "description": "Price",
              "example": "5000"
            },
            "categoryName": {
              "type": "string",
              "enum": ["sell", "lost-found", "for-free"],
              "description": "categoryName",
              "example": "lost-found"
            }
          }
      },

      "NoticesResponse": {
         "type": "array",
        "items": {
          "type": "object",
          "properties": {

            "id": {
              "type": "string",
              "description": "id",
              "example": "63d7b0396656072a3ad82e88"
            },
             "name": {
              "type": "string",
              "description": "Name",
              "example": "Teo"
            },
             "birthdate": {
              "type": "string",
              "description": "date",
              "example": "25-02-2022"
            },
             "breed": {
              "type": "string",
              "description": "breed",
              "example": "Exot"
            },
             "location": {
              "type": "string",
              "description": "Location",
              "example": "Fedorivka, Kyiv Oblast, Ukraine, 07372"
            },
             "comments": {
              "type": "string",
              "description": "Comments"
            },
             "price": {
              "type": "integer",
              "description": "Price",
              "example": "5000"
            },
            "categoryName": {
              "type": "string",
              "enum": ["sell", "lost-found", "for-free"],
              "description": "categoryName",
              "example": "lost-found"
            }
          }
        }
      }
    },

    
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}